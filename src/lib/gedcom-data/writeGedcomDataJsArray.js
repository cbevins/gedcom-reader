import fs from 'fs'
import { file2JsonArray } from '../index.js'
import { parseGedcomTextLines } from './parseGedcomTextLines.js'

const progName = (process.argv[1]).split('\\').pop()

function intFormat(val, width=4) { return val.toLocaleString('en-US').padStart(width) }

const fileName = '../tmp/RootsMagic.ged'   // './Sample.ged'
const outputName = '_GedcomDataJsArray.js'

const time1 = new Date()
const lines = await file2JsonArray(fileName)
const time2 = new Date()
const gedcom = parseGedcomTextLines(lines)
const time3 = new Date()
writeGedcomJsFile(gedcom, outputName)
const time4 = new Date()

console.log(`GEDCOM file ${fileName} with ${lines.length} lines has ${gedcom.length} records.`)
console.log(`file2JsonArray()       : ${intFormat(time2-time1)} msec`)
console.log(`parseGedcomTextLines() : ${intFormat(time3-time2)} msec`)
console.log(`writeGedcomJsFile()    : ${intFormat(time4-time3)} msec`)

function writeGedcomJsFile(gedcom, outputName, varName='gedcomData') {
    // Create some Javascript from the text array
    let js = `// auto-generated by ${progName} on ${new Date().toLocaleString()}\n`
    js += `// Each record is an array of:\n`
    js += `export const INDEX = 0    // rec[INDEX] is this record's index integer in the ${varName} GEDCOM array below\n`
    js += `export const LINENO = 1   // rec[LINENO] is the record's original GEDCOM file line number integer\n`
    js += `export const LEVEL = 2    // rec[LEVEL] is the record's base 0 GEDCOM hierarchical level integer\n`
    js += `export const TYPE = 3     // rec[TYPE] is the record's type string, like 'INDI', 'FAM', 'DATE', 'PLAC', etc.\n`
    js += `export const CONTENT = 4  // rec[CONTENT] is whatever string content the record may contain\n`
    js += `export const PARENT = 5   // rec[PARENT] is this record's parent array index integer, or 0 if no parent (level 0)\n`
    js += `export const CHILDREN = 6 // rec[CHILDREN] is a (possibly empty) array of this record's child array indices\n`
    js += `export const ${varName} = [\n`
    for(let i=0; i<gedcom.length; i++) {
        js += JSON.stringify(gedcom[i]) + ',\n'
    }
    js += ']\n'

    // Write the Javascript to a file for later use
    fs.writeFile(outputName, js, function (err) {
        if (err) throw err
    })
}
